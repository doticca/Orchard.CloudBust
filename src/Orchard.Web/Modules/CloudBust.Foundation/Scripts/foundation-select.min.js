!function (a) { a.fn.foundationSelect = function () { if (!a(".custom-dropdown-area").length) return this.each(function () { selectPrompt = "", selected = "", translateClasses = "", select = a(this), selectId = select.attr("id"), multiple = !1, multiple = !!select.prop("multiple"), options = "", select.data("prompt") ? (selectPrompt = '<span class="default-label">' + select.data("prompt") + "</span>", options = '<li class="disabled">' + selectPrompt + "</li>") : selectPrompt = "Choose...", select.find("option").each(function () { a(this).attr("selected") && (selected = "selected", selectPrompt = "<div class='" + a(this).attr("class") + "'>" + a(this).html() + "</div>"), a(this).attr("class") && (translateClasses = a(this).attr("class") + " "), options += '<li data-value="' + this.value + '" class="' + translateClasses + selected + '"><span class="option-title">' + a(this).html() + "</span></li>", selected = "" }), newButton = '<div class="custom-dropdown-area" data-orig-select="#' + selectId + '"' + (multiple ? ' data-multiple="true"' : "") + '><a href="#" data-dropdown="select-' + selectId + '" class="custom-dropdown-button">' + selectPrompt + '</a>         <ul id="select-' + selectId + '" class="f-dropdown custom-dropdown-options" data-dropdown-content>           ' + options + "         </ul></div>", select.hide(), select.after(newButton) }) }, a(document).on("click", ".custom-dropdown-area li", function () { return !a(this).hasClass("disabled") && (dropdown = a(this).closest(".custom-dropdown-area"), multiple = !!dropdown.data("multiple"), text = "<div class='" + a(this).attr("class") + "'>" + a(this).find(".option-title").html() + "</div>", value = a(this).data("value"), totalOptions = dropdown.find("li").not(".disabled").length, origDropdown = a(dropdown.data("orig-select")), prompt = origDropdown.data("prompt") ? origDropdown.data("prompt") : "Choose...", void (multiple ? (a(this).toggleClass("selected"), selectedOptions = [], selectedTitles = [], dropdown.find(".selected").each(function () { selectedOptions.push(a(this).data("value")), selectedTitles.push(a(this).find(".option-title").html()) }), origDropdown.val(selectedOptions).change(), selectedOptions.length ? selectedOptions.length > 2 ? dropdown.find(".custom-dropdown-button").html(selectedOptions.length + " of " + totalOptions + " selected") : dropdown.find(".custom-dropdown-button").html(selectedTitles.join(", ")) : dropdown.find(".custom-dropdown-button").html(prompt)) : (dropdown.find("li").removeClass("selected"), Foundation.libs.dropdown.close(a("#" + dropdown.find("ul").attr("id"))), origDropdown.val(value).change(), a(this).toggleClass("selected"), dropdown.find(".custom-dropdown-button").html(text)))) }), a(document).on("reset", "form", function () { a(this).children(".custom-dropdown-area").length && a(this).find(".custom-dropdown-area").each(function () { origDropdown = a(a(this).data("orig-select")), dropdown = a(this), multiple = !!dropdown.data("multiple"), dropdown.find("li").removeClass("selected"), origDropdown.data("prompt") ? prompt = origDropdown.data("prompt") : (origDropdown.find("option").each(function () { a(this).attr("selected") && (prompt = a(this).html(), dropdown.find('li[data-value="' + this.value + '"]').addClass("selected")) }), "" == prompt && (prompt = "Choose...")), dropdown.find(".custom-dropdown-button").html(prompt) }) }) }(jQuery);