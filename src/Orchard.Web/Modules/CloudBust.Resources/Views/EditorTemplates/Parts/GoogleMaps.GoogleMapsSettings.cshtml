@using CloudBust.Resources.ViewModels;
@model GoogleMapsSettingsViewModel

<fieldset class="googlemaps">
    <legend>@T("GoogleMaps")</legend>
    <span class="hint">Required Settings</span>
    <div>
        @Html.LabelFor(m => m.ApiKey, @T("Api Key"))

        @Html.TextBoxFor(m => m.ApiKey, new { @class = "textMedium" })
        <span class="hint">
            @T("Enter your Api Key or obtain one from https://developers.google.com/maps/documentation/javascript/get-api-key.")
        </span>
        @Html.ValidationMessageFor(m => m.ApiKey, "*")
    </div>

    <span class="hint">Standard Settings</span>
    <div>
        @Html.EditorFor(m => m.AutoEnable)
        <label class="forcheckbox" for="GoogleMapsSettings_AutoEnable">@T("Auto Enable")</label>
        <span class="hint">@T("it enables googlemaps script on every page header.")</span>
    </div>
    <div data-controllerid="GoogleMapsSettings_AutoEnable" data-defaultstate="visible">
        @Html.EditorFor(m => m.AutoEnableAdmin)
        <label class="forcheckbox" for="GoogleMapskSettings_AutoEnableAdmin">@T("Auto Enable Admin")</label>
        <span class="hint">@T("it enables googlemaps script on admin pages header.")</span>
    </div>
    <br />
    <span class="hint">Asynchronus Settings</span>
    <div>
        @Html.EditorFor(m => m.Async)
        <label class="forcheckbox" for="GoogleMapsSettings_Async">@T("Async")</label>
        <span class="hint">@T("it enables async loading for google maps script library (also set defer and callback).")</span>
    </div>
    <div>
        @Html.EditorFor(m => m.Defer)
        <label class="forcheckbox" for="GoogleMapsSettings_Defer">@T("Defer")</label>
        <span class="hint">@T("it enables defer loading for google maps script library (also set asyn and callback).")</span>
    </div>
    <div>
        @Html.LabelFor(m => m.CallBack, @T("Callback Function"))

        @Html.TextBoxFor(m => m.CallBack, new { @class = "textMedium" })
        <span class="hint">
            @T("Enter the function name to call after async loading.")
        </span>
        @Html.ValidationMessageFor(m => m.CallBack, "*")
    </div>
    <br />
    <span class="hint">Map Settings</span>
    <div>
        @Html.EditorFor(m => m.Sensor)
        <label class="forcheckbox" for="GoogleMapsSettings_Sensor">@T("Sensor")</label>
        <span class="hint">@T("it enables the use of sensor for your google maps.")</span>
    </div>
    <div>
        @Html.LabelFor(m => m.Language, @T("Language"))

        @Html.TextBoxFor(m => m.Language, new { @class = "textSmall" })
        <span class="hint">
            @T("Enter the language to support.")
        </span>
        @Html.ValidationMessageFor(m => m.Language, "*")
    </div>
</fieldset>

@using (Script.Foot())
{
    <script type="text/javascript">
        // hack to make the base.js script work with controller ids
        (function ($) {
            $(document).ready(function () {
                $(".googlemaps").find("input[name='GoogleMapsSettings.AutoEnable']").click().click();
            });
        })(jQuery);
    </script>
}